// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SalesCodedUI
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// A method for testing the functionality of updating the Sales Quota
        /// </summary>
        public void SalesQuotaUpdate()
        {
            #region Variable Declarations
            WinButton uINewTabButton = this.UINewTabGoogleChromeWindow.UIItemTabList.UINewTabButton;
            WinEdit uIAddressandsearchbarEdit = this.UINewTabGoogleChromeWindow.UIItemGroup.UIAddressandsearchbarEdit;
            WinButton uIAngularJSAuthenticatButton = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowDocument.UIAngularJSAuthenticatButton;
            WinEdit uIItemEdit = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowDocument.UIItemEdit;
            WinEdit uIItemEdit1 = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowDocument.UIItemEdit1;
            WinButton uIAngularJSAuthenticatButton1 = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowDocument.UIAngularJSAuthenticatButton1;
            WinTable uIAngularJSAuthenticatTable = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowDocument.UIAngularJSAuthenticatTable;
            WinButton uIAngularJSAuthenticatButton2 = this.UINewTabGoogleChromeWindow.UIItemCell.UIAngularJSAuthenticatButton;
            WinText uIAngularJSAuthenticatText = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowDocument.UIAngularJSAuthenticatText;
            #endregion

            // Click 'New Tab' button
            Mouse.Click(uINewTabButton, new Point(24, 11));

            // Type 'Control + v' in 'Address and search bar' text box
            Keyboard.SendKeys(uIAddressandsearchbarEdit, this.SalesQuotaUpdateParams.UIAddressandsearchbarEditSendKeys, ModifierKeys.Control);

            // Type '{Enter}' in 'Address and search bar' text box
            Keyboard.SendKeys(uIAddressandsearchbarEdit, this.SalesQuotaUpdateParams.UIAddressandsearchbarEditSendKeys1, ModifierKeys.None);

            // Click 'AngularJS Authentication - Google Chrome' button
            Mouse.Click(uIAngularJSAuthenticatButton, new Point(79, 25));

            // Click text box
            Mouse.Click(uIItemEdit, new Point(99, 22));

            // Type 'Test {LShiftKey}User 1{Tab}test1' in text box
            Keyboard.SendKeys(uIItemEdit1, this.SalesQuotaUpdateParams.UIItemEdit1SendKeys, ModifierKeys.None);

            // Click 'AngularJS Authentication - Google Chrome' button
            Mouse.Click(uIAngularJSAuthenticatButton1, new Point(119, 28));

            // Click 'AngularJS Authentication - Google Chrome' table
            Mouse.Click(uIAngularJSAuthenticatTable, new Point(556, 320));

            // Type 'Shift + {Home}'
            Keyboard.SendKeys(this.SalesQuotaUpdateParams.SendKeys, ModifierKeys.Shift);

            // Type '{NumPad1}{NumPad0}{NumPad0}{NumPad0}'
            Keyboard.SendKeys(this.SalesQuotaUpdateParams.SendKeys1, ModifierKeys.None);

            // Click 'AngularJS Authentication - Google Chrome' button
            Mouse.Click(uIAngularJSAuthenticatButton2, new Point(53, 11));

            // Click 'AngularJS Authentication - Google Chrome' label
            Mouse.Click(uIAngularJSAuthenticatText, new Point(1126, 23));
        }
        
        #region Properties
        public virtual SalesQuotaUpdateParams SalesQuotaUpdateParams
        {
            get
            {
                if ((this.mSalesQuotaUpdateParams == null))
                {
                    this.mSalesQuotaUpdateParams = new SalesQuotaUpdateParams();
                }
                return this.mSalesQuotaUpdateParams;
            }
        }
        
        public UINewTabGoogleChromeWindow UINewTabGoogleChromeWindow
        {
            get
            {
                if ((this.mUINewTabGoogleChromeWindow == null))
                {
                    this.mUINewTabGoogleChromeWindow = new UINewTabGoogleChromeWindow();
                }
                return this.mUINewTabGoogleChromeWindow;
            }
        }
        #endregion
        
        #region Fields
        private SalesQuotaUpdateParams mSalesQuotaUpdateParams;
        
        private UINewTabGoogleChromeWindow mUINewTabGoogleChromeWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SalesQuotaUpdate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SalesQuotaUpdateParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Control + v' in 'Address and search bar' text box
        /// </summary>
        public string UIAddressandsearchbarEditSendKeys = "v";
        
        /// <summary>
        /// Type '{Enter}' in 'Address and search bar' text box
        /// </summary>
        public string UIAddressandsearchbarEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'Test {LShiftKey}User 1{Tab}test1' in text box
        /// </summary>
        public string UIItemEdit1SendKeys = "Test {LShiftKey}User 2{Tab}test1";
        
        /// <summary>
        /// Type 'Shift + {Home}'
        /// </summary>
        public string SendKeys = "{Home}";
        
        /// <summary>
        /// Type '{NumPad1}{NumPad0}{NumPad0}{NumPad0}'
        /// </summary>
        public string SendKeys1 = "{NumPad1}{NumPad0}{NumPad0}{NumPad0}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINewTabGoogleChromeWindow : WinWindow
    {
        
        public UINewTabGoogleChromeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "New Tab - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("New Tab - Google Chrome");
            this.WindowTitles.Add("AngularJS Authentication - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIItemTabList UIItemTabList
        {
            get
            {
                if ((this.mUIItemTabList == null))
                {
                    this.mUIItemTabList = new UIItemTabList(this);
                }
                return this.mUIItemTabList;
            }
        }
        
        public UIItemGroup UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new UIItemGroup(this);
                }
                return this.mUIItemGroup;
            }
        }
        
        public UIChromeLegacyWindowDocument UIChromeLegacyWindowDocument
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument == null))
                {
                    this.mUIChromeLegacyWindowDocument = new UIChromeLegacyWindowDocument(this);
                }
                return this.mUIChromeLegacyWindowDocument;
            }
        }
        
        public UIItemCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell(this);
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTabList mUIItemTabList;
        
        private UIItemGroup mUIItemGroup;
        
        private UIChromeLegacyWindowDocument mUIChromeLegacyWindowDocument;
        
        private UIItemCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemTabList : WinTabList
    {
        
        public UIItemTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("New Tab - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinButton UINewTabButton
        {
            get
            {
                if ((this.mUINewTabButton == null))
                {
                    this.mUINewTabButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINewTabButton.SearchProperties[WinButton.PropertyNames.Name] = "New Tab";
                    this.mUINewTabButton.WindowTitles.Add("New Tab - Google Chrome");
                    #endregion
                }
                return this.mUINewTabButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINewTabButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemGroup : WinGroup
    {
        
        public UIItemGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("New Tab - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchbarEdit
        {
            get
            {
                if ((this.mUIAddressandsearchbarEdit == null))
                {
                    this.mUIAddressandsearchbarEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchbarEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search bar";
                    this.mUIAddressandsearchbarEdit.WindowTitles.Add("New Tab - Google Chrome");
                    #endregion
                }
                return this.mUIAddressandsearchbarEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchbarEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIChromeLegacyWindowDocument : WinControl
    {
        
        public UIChromeLegacyWindowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "AngularJS Authentication";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("AngularJS Authentication - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinButton UIAngularJSAuthenticatButton
        {
            get
            {
                if ((this.mUIAngularJSAuthenticatButton == null))
                {
                    this.mUIAngularJSAuthenticatButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAngularJSAuthenticatButton.SearchProperties[WinButton.PropertyNames.Name] = "Login »";
                    this.mUIAngularJSAuthenticatButton.WindowTitles.Add("AngularJS Authentication - Google Chrome");
                    #endregion
                }
                return this.mUIAngularJSAuthenticatButton;
            }
        }
        
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("AngularJS Authentication - Google Chrome");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WinEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.WindowTitles.Add("AngularJS Authentication - Google Chrome");
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        
        public WinButton UIAngularJSAuthenticatButton1
        {
            get
            {
                if ((this.mUIAngularJSAuthenticatButton1 == null))
                {
                    this.mUIAngularJSAuthenticatButton1 = new WinButton(this);
                    #region Search Criteria
                    this.mUIAngularJSAuthenticatButton1.SearchProperties[WinButton.PropertyNames.Name] = "Login";
                    this.mUIAngularJSAuthenticatButton1.WindowTitles.Add("AngularJS Authentication - Google Chrome");
                    #endregion
                }
                return this.mUIAngularJSAuthenticatButton1;
            }
        }
        
        public WinTable UIAngularJSAuthenticatTable
        {
            get
            {
                if ((this.mUIAngularJSAuthenticatTable == null))
                {
                    this.mUIAngularJSAuthenticatTable = new WinTable(this);
                    #region Search Criteria
                    this.mUIAngularJSAuthenticatTable.WindowTitles.Add("AngularJS Authentication - Google Chrome");
                    #endregion
                }
                return this.mUIAngularJSAuthenticatTable;
            }
        }
        
        public WinText UIAngularJSAuthenticatText
        {
            get
            {
                if ((this.mUIAngularJSAuthenticatText == null))
                {
                    this.mUIAngularJSAuthenticatText = new WinText(this);
                    #region Search Criteria
                    this.mUIAngularJSAuthenticatText.SearchProperties[WinText.PropertyNames.Name] = "AngularJS Application which uses OAuth Bearer Token for authentication and implem" +
                        "ents Refresh Tokens. The backend API is built using ASP.NET Web API 2, OWIN midd" +
                        "leware, and ASP.NET Identity.";
                    this.mUIAngularJSAuthenticatText.WindowTitles.Add("AngularJS Authentication - Google Chrome");
                    #endregion
                }
                return this.mUIAngularJSAuthenticatText;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAngularJSAuthenticatButton;
        
        private WinEdit mUIItemEdit;
        
        private WinEdit mUIItemEdit1;
        
        private WinButton mUIAngularJSAuthenticatButton1;
        
        private WinTable mUIAngularJSAuthenticatTable;
        
        private WinText mUIAngularJSAuthenticatText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemCell : WinCell
    {
        
        public UIItemCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("AngularJS Authentication - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinButton UIAngularJSAuthenticatButton
        {
            get
            {
                if ((this.mUIAngularJSAuthenticatButton == null))
                {
                    this.mUIAngularJSAuthenticatButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAngularJSAuthenticatButton.SearchProperties[WinButton.PropertyNames.Name] = "Save Quota";
                    this.mUIAngularJSAuthenticatButton.WindowTitles.Add("AngularJS Authentication - Google Chrome");
                    #endregion
                }
                return this.mUIAngularJSAuthenticatButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAngularJSAuthenticatButton;
        #endregion
    }
}
