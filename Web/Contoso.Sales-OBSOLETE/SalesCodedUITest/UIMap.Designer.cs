// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SalesCodedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// LaunchApplication - Use 'LaunchApplicationParams' to pass parameters into this method.
        /// </summary>
        public void LaunchApplication()
        {
            #region Variable Declarations
            WinButton uINewTabButton = this.UINewTabGoogleChromeWindow.UIItemTabList.UINewTabButton;
            WinEdit uIAddressandsearchbarEdit = this.UINewTabGoogleChromeWindow.UIItemGroup.UIAddressandsearchbarEdit;
            WinButton uISalesPOCGoogleChromeButton = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowDocument.UISalesPOCGoogleChromeButton;
            #endregion

            // Click 'New Tab' button
            Mouse.Click(uINewTabButton, new Point(22, 11));

            // Type 'salespocwebmanesh.azureweb' in 'Address and search bar' text box
            Keyboard.SendKeys(uIAddressandsearchbarEdit, this.LaunchApplicationParams.UIAddressandsearchbarEditSendKeys, ModifierKeys.None);

            // Type 'sites.ney{Back}t{Enter}' in 'Address and search bar' text box
            Keyboard.SendKeys(uIAddressandsearchbarEdit, this.LaunchApplicationParams.UIAddressandsearchbarEditSendKeys1, ModifierKeys.None);

            // Click 'Sales POC - Google Chrome' button
            Mouse.Click(uISalesPOCGoogleChromeButton, new Point(15, 37));
        }
        
        /// <summary>
        /// LoginMethod - Use 'LoginMethodParams' to pass parameters into this method.
        /// </summary>
        public void LoginMethod()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowDocument.UIItemEdit;
            WinEdit uIUsernameEdit = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowDocument.UIUsernameEdit;
            WinEdit uIItemEdit1 = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowDocument.UIItemEdit1;
            WinButton uISalesPOCGoogleChromeButton1 = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowDocument.UISalesPOCGoogleChromeButton1;
            #endregion

            // Click text box
            Mouse.Click(uIItemEdit, new Point(309, 26));

            // Type 'k' in text box
            Keyboard.SendKeys(uIItemEdit, this.LoginMethodParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type '@b.com{Tab}' in 'Username' text box
            Keyboard.SendKeys(uIUsernameEdit, this.LoginMethodParams.UIUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in text box numbered 2 in 'Chrome Legacy Window' document
            Keyboard.SendKeys(uIItemEdit1, this.LoginMethodParams.UIItemEdit1SendKeys, true);

            // Click 'Sales POC - Google Chrome' button
            Mouse.Click(uISalesPOCGoogleChromeButton1, new Point(330, 18));
        }
        
        /// <summary>
        /// UpdateQuota - Use 'UpdateQuotaParams' to pass parameters into this method.
        /// </summary>
        public void UpdateQuota()
        {
            #region Variable Declarations
            WinTable uISalesPOCGoogleChromeTable = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowDocument.UISalesPOCGoogleChromeTable;
            WinEdit uIItemEdit = this.UINewTabGoogleChromeWindow.UIItemCell.UIItemEdit;
            WinButton uISalesPOCGoogleChromeButton = this.UINewTabGoogleChromeWindow.UIItemCell1.UISalesPOCGoogleChromeButton;
            #endregion

            // Click 'Sales POC - Google Chrome' table
            Mouse.Click(uISalesPOCGoogleChromeTable, new Point(707, 59));
            
            // Click 'Sales POC - Google Chrome' button
            Mouse.Click(uISalesPOCGoogleChromeButton, new Point(34, 21));
        }
        
        /// <summary>
        /// Logout
        /// </summary>
        public void Logout()
        {
            #region Variable Declarations
            WinText uISalesPOCGoogleChromeText = this.UINewTabGoogleChromeWindow.UILogoutHyperlink.UISalesPOCGoogleChromeText;
            #endregion

            // Click 'Sales POC - Google Chrome' label
            Mouse.Click(uISalesPOCGoogleChromeText, new Point(24, 11));
        }
        
        #region Properties
        public virtual LaunchApplicationParams LaunchApplicationParams
        {
            get
            {
                if ((this.mLaunchApplicationParams == null))
                {
                    this.mLaunchApplicationParams = new LaunchApplicationParams();
                }
                return this.mLaunchApplicationParams;
            }
        }
        
        public virtual LoginMethodParams LoginMethodParams
        {
            get
            {
                if ((this.mLoginMethodParams == null))
                {
                    this.mLoginMethodParams = new LoginMethodParams();
                }
                return this.mLoginMethodParams;
            }
        }
        
        public virtual UpdateQuotaParams UpdateQuotaParams
        {
            get
            {
                if ((this.mUpdateQuotaParams == null))
                {
                    this.mUpdateQuotaParams = new UpdateQuotaParams();
                }
                return this.mUpdateQuotaParams;
            }
        }
        
        public UINewTabGoogleChromeWindow UINewTabGoogleChromeWindow
        {
            get
            {
                if ((this.mUINewTabGoogleChromeWindow == null))
                {
                    this.mUINewTabGoogleChromeWindow = new UINewTabGoogleChromeWindow();
                }
                return this.mUINewTabGoogleChromeWindow;
            }
        }
        #endregion
        
        #region Fields
        private LaunchApplicationParams mLaunchApplicationParams;
        
        private LoginMethodParams mLoginMethodParams;
        
        private UpdateQuotaParams mUpdateQuotaParams;
        
        private UINewTabGoogleChromeWindow mUINewTabGoogleChromeWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LaunchApplication'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LaunchApplicationParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'salespocwebmanesh.azureweb' in 'Address and search bar' text box
        /// </summary>
        public string UIAddressandsearchbarEditSendKeys = "salespocwebmanesh.azureweb";
        
        /// <summary>
        /// Type 'sites.ney{Back}t{Enter}' in 'Address and search bar' text box
        /// </summary>
        public string UIAddressandsearchbarEditSendKeys1 = "sites.ney{Back}t{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LoginMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'k' in text box
        /// </summary>
        public string UIItemEditSendKeys = "k";
        
        /// <summary>
        /// Type '@b.com{Tab}' in 'Username' text box
        /// </summary>
        public string UIUsernameEditSendKeys = "@b.com{Tab}";
        
        /// <summary>
        /// Type '********' in text box numbered 2 in 'Chrome Legacy Window' document
        /// </summary>
        public string UIItemEdit1SendKeys = "rQubPvMzW0/NSPLA1khqN6+WDNtLSfrB";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UpdateQuota'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UpdateQuotaParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Back}{Back}{NumPad5}{NumPad6}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Back}{Back}{NumPad6}{NumPad7}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINewTabGoogleChromeWindow : WinWindow
    {
        
        public UINewTabGoogleChromeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "New Tab - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("New Tab - Google Chrome");
            this.WindowTitles.Add("Sales POC - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIItemTabList UIItemTabList
        {
            get
            {
                if ((this.mUIItemTabList == null))
                {
                    this.mUIItemTabList = new UIItemTabList(this);
                }
                return this.mUIItemTabList;
            }
        }
        
        public UIItemGroup UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new UIItemGroup(this);
                }
                return this.mUIItemGroup;
            }
        }
        
        public UIChromeLegacyWindowDocument UIChromeLegacyWindowDocument
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument == null))
                {
                    this.mUIChromeLegacyWindowDocument = new UIChromeLegacyWindowDocument(this);
                }
                return this.mUIChromeLegacyWindowDocument;
            }
        }
        
        public UIItemCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell(this);
                }
                return this.mUIItemCell;
            }
        }
        
        public UIItemCell1 UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new UIItemCell1(this);
                }
                return this.mUIItemCell1;
            }
        }
        
        public UILogoutHyperlink UILogoutHyperlink
        {
            get
            {
                if ((this.mUILogoutHyperlink == null))
                {
                    this.mUILogoutHyperlink = new UILogoutHyperlink(this);
                }
                return this.mUILogoutHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTabList mUIItemTabList;
        
        private UIItemGroup mUIItemGroup;
        
        private UIChromeLegacyWindowDocument mUIChromeLegacyWindowDocument;
        
        private UIItemCell mUIItemCell;
        
        private UIItemCell1 mUIItemCell1;
        
        private UILogoutHyperlink mUILogoutHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemTabList : WinTabList
    {
        
        public UIItemTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("New Tab - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinButton UINewTabButton
        {
            get
            {
                if ((this.mUINewTabButton == null))
                {
                    this.mUINewTabButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINewTabButton.SearchProperties[WinButton.PropertyNames.Name] = "New Tab";
                    this.mUINewTabButton.WindowTitles.Add("New Tab - Google Chrome");
                    #endregion
                }
                return this.mUINewTabButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINewTabButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemGroup : WinGroup
    {
        
        public UIItemGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("New Tab - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchbarEdit
        {
            get
            {
                if ((this.mUIAddressandsearchbarEdit == null))
                {
                    this.mUIAddressandsearchbarEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchbarEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search bar";
                    this.mUIAddressandsearchbarEdit.WindowTitles.Add("New Tab - Google Chrome");
                    #endregion
                }
                return this.mUIAddressandsearchbarEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchbarEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIChromeLegacyWindowDocument : WinControl
    {
        
        public UIChromeLegacyWindowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Sales POC";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("Sales POC - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinButton UISalesPOCGoogleChromeButton
        {
            get
            {
                if ((this.mUISalesPOCGoogleChromeButton == null))
                {
                    this.mUISalesPOCGoogleChromeButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISalesPOCGoogleChromeButton.SearchProperties[WinButton.PropertyNames.Name] = "Login »";
                    this.mUISalesPOCGoogleChromeButton.WindowTitles.Add("Sales POC - Google Chrome");
                    #endregion
                }
                return this.mUISalesPOCGoogleChromeButton;
            }
        }
        
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Sales POC - Google Chrome");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WinEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Username";
                    this.mUIUsernameEdit.WindowTitles.Add("Sales POC - Google Chrome");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public WinEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.SearchProperties[WinEdit.PropertyNames.Instance] = "2";
                    this.mUIItemEdit1.WindowTitles.Add("Sales POC - Google Chrome");
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        
        public WinButton UISalesPOCGoogleChromeButton1
        {
            get
            {
                if ((this.mUISalesPOCGoogleChromeButton1 == null))
                {
                    this.mUISalesPOCGoogleChromeButton1 = new WinButton(this);
                    #region Search Criteria
                    this.mUISalesPOCGoogleChromeButton1.SearchProperties[WinButton.PropertyNames.Name] = "Login";
                    this.mUISalesPOCGoogleChromeButton1.WindowTitles.Add("Sales POC - Google Chrome");
                    #endregion
                }
                return this.mUISalesPOCGoogleChromeButton1;
            }
        }
        
        public WinTable UISalesPOCGoogleChromeTable
        {
            get
            {
                if ((this.mUISalesPOCGoogleChromeTable == null))
                {
                    this.mUISalesPOCGoogleChromeTable = new WinTable(this);
                    #region Search Criteria
                    this.mUISalesPOCGoogleChromeTable.WindowTitles.Add("Sales POC - Google Chrome");
                    #endregion
                }
                return this.mUISalesPOCGoogleChromeTable;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISalesPOCGoogleChromeButton;
        
        private WinEdit mUIItemEdit;
        
        private WinEdit mUIUsernameEdit;
        
        private WinEdit mUIItemEdit1;
        
        private WinButton mUISalesPOCGoogleChromeButton1;
        
        private WinTable mUISalesPOCGoogleChromeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemCell : WinCell
    {
        
        public UIItemCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Sales POC - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Sales POC - Google Chrome");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemCell1 : WinCell
    {
        
        public UIItemCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Sales POC - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinButton UISalesPOCGoogleChromeButton
        {
            get
            {
                if ((this.mUISalesPOCGoogleChromeButton == null))
                {
                    this.mUISalesPOCGoogleChromeButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISalesPOCGoogleChromeButton.SearchProperties[WinButton.PropertyNames.Name] = "Save Quota";
                    this.mUISalesPOCGoogleChromeButton.WindowTitles.Add("Sales POC - Google Chrome");
                    #endregion
                }
                return this.mUISalesPOCGoogleChromeButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISalesPOCGoogleChromeButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILogoutHyperlink : WinHyperlink
    {
        
        public UILogoutHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Logout";
            this.WindowTitles.Add("Sales POC - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinText UISalesPOCGoogleChromeText
        {
            get
            {
                if ((this.mUISalesPOCGoogleChromeText == null))
                {
                    this.mUISalesPOCGoogleChromeText = new WinText(this);
                    #region Search Criteria
                    this.mUISalesPOCGoogleChromeText.SearchProperties[WinText.PropertyNames.Name] = "Logout";
                    this.mUISalesPOCGoogleChromeText.WindowTitles.Add("Sales POC - Google Chrome");
                    #endregion
                }
                return this.mUISalesPOCGoogleChromeText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUISalesPOCGoogleChromeText;
        #endregion
    }
}
